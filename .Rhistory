accum30 <- raster::raster("D:/R_folder/Rasters/Common/accum30.tif")
accum30_agg <- raster::aggregate(accum30, fact = 3)
accum30
accum30_agg
accum30_agg <- raster::aggregate(accum30, fact = 4)
accum30_agg
accum30_agg <- raster::aggregate(accum30, fact = 5)
accum30_agg
plot(accum30_agg)
raster::plot(accum30_agg)
raster::plot(log(accum30_agg))
accum30_agg <- log(accum30_agg
)
devtools::document()
library(future)
plan(multisession(workers = availableCores()-1))
test <- tilt_map(accum30_agg)
plot_tiltedmaps(test)
plot_tiltedmaps(list(test))
tpi30 <- raster::raster("D:/R_folder/Rasters/Common/tpi30.tif")
tpi30_agg <- raster::aggregate(tpi30, fact = 5)
tpi <- tilt_map(tpi30_agg)
deficit <- raster::raster("D:/R_folder/Rasters/Common/deficitRS.tif")
def_agg <- raster::aggregate(deficit, fact = 5)
npp <- raster::raster("D:/R_folder/Rasters/Common/nppmmid30RS.tif")
npp <- raster::raster("D:/R_folder/Rasters/Common/nppmmid30agg.tif")
npp_agg <- raster::aggregate(npp, fact = 5)
npp <- tilt_map(npp_agg)
def <- tilt_map(def_agg)
plot_tiltedmaps(list(test, npp, tpi, def),
layer = c("value", "value", "value", 'value'),
palette = c("bilbao", "mako", "rocket", 'magma'),
color = "grey40")
tpi <- tilt_map(tpi30_agg, x_shift = 25, y_shift = 50)
npp <- tilt_map(npp_agg, x_shift = 50, y_shift = 75)
def <- tilt_map(def_agg, x_shift = 75, y_shift = 100)
plot_tiltedmaps(list(test, npp, tpi, def),
layer = c("value", "value", "value", 'value'),
palette = c("bilbao", "mako", "rocket", 'magma'),
color = "grey40")
tpi <- tilt_map(tpi30_agg, x_shift = 10000, y_shift = 1000)
npp <- tilt_map(npp_agg, x_shift = 15000, y_shift = 2000)
def <- tilt_map(def_agg, x_shift = 20000, y_shift = 3000)
plot_tiltedmaps(list(test, npp, tpi, def),
layer = c("value", "value", "value", 'value'),
palette = c("bilbao", "mako", "rocket", 'magma'),
color = "grey40")
data <- stars::st_as_stars(accum30)
data <- sf::st_as_sf(data)
lobstr::obj_size(data)
1587460280*0.000001
data2 <- data[1,]
View(data2)
devtools::document()
library(future)
plan(multisession(workers = availableCores()-1))
test <- tilt_map(accum30)
n_lists <- nrow(data)/500
data <- data %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>% dplyr::pull(data)
lobstr::obj_size(data)
data <- accum30
data <- stars::st_as_stars(data)
View(data)
length(is.na(data$accum30))
length(is.na(data$accum30[1:50]))
is.na(data$accum30[1:50])
is.na(data$accum30[1000:1050])
data[["accum30"]]
is.na(data$accum30[1000:1050, 1:2])
is.na(data$accum30[1000:1050, 1:20])
df <- data$accum30
View(df)
attr(data)
str(data)
data
data <- sf::st_as_sf(data)
data2 <- data[1:50,]
View(data2)
gc()
data <- stars::st_as_stars(data)
n_lists <- nrow(data)/5000
n_lists <- nrow(data$accum30)/5000
n_lists <- nrow(data[[1]])/5000
data <- data %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>% dplyr::pull(data)
data <- data[[1]] %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>% dplyr::pull(data)
data <- sf::st_as_sf(data)
length(is.na(data$accum30))
length(!is.na(data$accum30))
is.na(data$accum30)
filter(is.na(data$accum30))
library(tidyverse)
filter(is.na(data$accum30))
dplyr::filter(is.na(data$accum30))
dplyr::filter(data, is.na(accum30))
lobstr::obj_size(data)
data <- stars::st_as_stars(data)
lobstr::obj_size(data)
lobstr::obj_size(accum30)
data <- accum30
lobstr::obj_size(data)
data2 <- sf::st_as_sf(data)
data <- stars::st_as_stars(data)
lobstr::obj_size(data)
data2 <- sf::st_as_sf(data)
lobstr::obj_size(data2)
devtools::document()
library(future)
plan(multisession(workers = availableCores()-1))
test <- tilt_map(accum30)
data3 <- data2[1:50,]
x_stretch = 2
y_stretch = 1.2
x_tilt = 0
y_tilt = 1
x_shift = 0
y_shift = 0
sf::st_geometry(data3) <- sf::st_geometry(data3) * shear_matrix() * rotate_matrix(pi / 20) + c(x_shift, y_shift) %>% sf::st_as_sf()
matrix(c(x_stretch, y_stretch, x_tilt, y_tilt), 2, 2)
shear_matrix <- function(x) {
matrix(c(x_stretch, y_stretch, x_tilt, y_tilt), 2, 2)
}
rotate_matrix <- function(x) {
matrix(c(cos(x), sin(x), -sin(x), cos(x)), 2, 2)
}
sf::st_geometry(data3) <- sf::st_geometry(data3) * shear_matrix() * rotate_matrix(pi / 20) + c(x_shift, y_shift) %>% sf::st_as_sf()
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
sf::st_as_sf() %>%
plyr::rbind.fill() %>%
sf::st_as_sf()
geom_func <- function(data, x_stretch, y_stretch, x_tilt, y_tilt, x_shift, y_shift){
sf::st_geometry(data) <- sf::st_geometry(data) * shear_matrix() * rotate_matrix(pi / 20) + c(x_shift, y_shift) %>% sf::st_as_sf()
}
n_lists <- nrow(data3)/5000
n_lists <- nrow(data3)/50
n_lists <- nrow(data3)/5
n_lists <- nrow(data3)/5000
n_lists <- nrow(data3)/5
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
sf::st_as_sf() %>%
plyr::rbind.fill() %>%
sf::st_as_sf()
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift))
geom_func <- function(data, x_stretch, y_stretch, x_tilt, y_tilt, x_shift, y_shift){
sf::st_geometry(data) <- sf::st_geometry(data) * shear_matrix() * rotate_matrix(pi / 20) + c(x_shift, y_shift)
}
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift))
View(data4)
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
map(sf::st_as_sf()) %>%
plyr::rbind.fill() %>%
sf::st_as_sf()
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
map(sf::st_as_sf(.)) %>%
plyr::rbind.fill() %>%
sf::st_as_sf()
View(data4)
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
map(~sf::st_as_sf(.)) %>%
plyr::rbind.fill() %>%
sf::st_as_sf()
View(data4)
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
map(~sf::st_as_sf(.)) %>%
plyr::rbind.fill()
View(data4)
View(data4)
geom_func <- function(data, x_stretch, y_stretch, x_tilt, y_tilt, x_shift, y_shift){
sf::st_geometry(data) <- sf::st_geometry(data) * shear_matrix() * rotate_matrix(pi / 20) + c(x_shift, y_shift)
data <- data %>% sf::st_as_sf()
}
data4 <- data3 %>%
dplyr::group_by(group = (dplyr::row_number()-1) %/% (dplyr::n()/n_lists))%>%
tidyr::nest() %>%
dplyr::pull(data) %>%
furrr::future_map(~geom_func(data = .,
x_stretch = x_stretch,
y_stretch = y_stretch,
x_tilt = x_tilt,
y_tilt = y_tilt,
x_shift = x_shift,
y_shift = y_shift)) %>%
plyr::rbind.fill() %>%
sf::st_as_sf()
View(data4)
gb()
accum30 <- raster::raster("D:/R_folder/Rasters/Common/accum30.tif")
devtools::document()
devtools::document()
library(future)
plan(multisession(workers = availableCores()-1))
test <- tilt_map(accum30)
library(future.callr)
install.packages('future.callr')
install.packages('future.callr')
devtools::document()
library(future)
library(furrr)
library(future.callr)
library(callr)
library('future.callr')
plan(callr)
devtools::document()
library(future)
library(future.callr)
plan(callr)
test <- tilt_map(accum30)
